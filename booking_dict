#obs : lembrando que essa questão  ela foi tirada de um site url ( como o beecrowd , o coddy , o mimo ) então temos que fazer cruamente o que a questão 
solicita sem mais nem menos , mas ao transferir esse  código para o vs code, para ele funcionar, faça as devidas alterações necessárias 


def display_menu ():
   
   print("""Contact Book Menu:
1. Add Contact
2. View Contact
3. Edit Contact
4. Delete Contact
5. List All Contacts
6. Exit""")
def add_contact(contact_book):
    name = input()
    email = input()
    address = input()
    phone = input()
    if dict in contact_book.keys() : 
       return"Contact already exists!"
    else : 
      contact_book[name] = {"Phone":phone,"Email":email,"address":address}
      return"Contact added successfully!"
      

def view_contact (contact_book):
    name = input()
    if name not in contact_book.keys():
       print("Contact not found!")
    else : 
        # a variável information vai guardar o acesso ao dicionário interno , que é o value do nome especificado pelo usuário
       information  = contact_book[name]
    #  print("Name: ",name) 
    #  print("Phone: ",information["phone"])
    #  print("Email: ",information["email"])
    #  print("Address: ",information["address"])
    # ou 
       print("Name:",name) 
       print("Phone:",contact_book[name]["phone"])
       print("Email:",contact_book[name]["email"])
       print("Address:",contact_book[name]["address"])

def edit_contact (contact_book):
       name = input()
       if name  in contact_book: 
            phone = input()
            email = input()
            address = input()
            contact_book[name] = {"name":name,"phone":phone,"email":email,"address":address}
            print("Contact updated successfully!")
       else : 
            print("Contact not found!")

def delete_contact (contact_book):
    name = input()
    if name in contact_book:
       del  contact_book[name]
       print("Contact deleted successfully!")
    else : 
        print("Contact not found!")


def display_menu ():
   
   print("""Contact Book Menu:
1. Add Contact
2. View Contact
3. Edit Contact
4. Delete Contact
5. List All Contacts
6. Exit""")
def add_contact(contact_book):
    name = input()
    email = input()
    address = input()
    phone = input()
    if dict in contact_book.keys() : 
       return"Contact already exists!"
    else : 
      contact_book[name] = {"Phone":phone,"Email":email,"address":address}
      return"Contact added successfully!"
      

def view_contact (contact_book):
    name = input()
    if name not in contact_book.keys():
       print("Contact not found!")
    else : 
        # a variável information vai guardar o acesso ao dicionário interno , que é o value do nome especificado pelo usuário
       information  = contact_book[name]
    #  print("Name: ",name) 
    #  print("Phone: ",information["phone"])
    #  print("Email: ",information["email"])
    #  print("Address: ",information["address"])
    # ou 
       print("Name:",name) 
       print("Phone:",contact_book[name]["phone"])
       print("Email:",contact_book[name]["email"])
       print("Address:",contact_book[name]["address"])

def edit_contact (contact_book):
       name = input()
       if name  in contact_book: 
            phone = input()
            email = input()
            address = input()
            contact_book[name] = {"name":name,"phone":phone,"email":email,"address":address}
            print("Contact updated successfully!")
       else : 
            print("Contact not found!")

def delete_contact (contact_book):
    name = input()
    if name in contact_book:
       del  contact_book[name]
       print("Contact deleted successfully!")
    else : 
        print("Contact not found!")


         #  key e value podem ser qualquer nomes ,contudo saiba que a variável  que veem antes da vírgula representam a key , e o que 
         # vem depois representa o value .
"""definição de dicionário interno e externo .
ex : dictionary_book = {"Bob": {"phone": "234-567-8901", "email": "bob@example.com", "address": "456 Oak Ave"}, "Carol": {"phone": "345-678-9012", "email": "carol@example.com", "address": "789 Pine Rd"}}
dictionary_book é um dicionário externo e atrelada à cada uma das suas keys  tem um value que é um dicionário interno ( um dicionário dentro de outro dicionário)
"""
def list_all_contacts(contact_book):
    if not contact_book:
        print( "No contacts available.")
    else :  
        for key_extern in contact_book:
                print(f"Name: {key_extern}")
                contact = contact_book[key_extern]
         #   aqui em cima vamos capturar na variável contact o dicionário interno 
                for key_intern ,value_intern in contact.items() :
                     first_maiuscula = key_intern.replace(key_intern[0],key_intern[0].upper())
                     # Acima manipulamos a substring referente à primeira letra de cada key do dicionário interno 
                     print(f"{first_maiuscula}: {value_intern}")
                print("                       ")

