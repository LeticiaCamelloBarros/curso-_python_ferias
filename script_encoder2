      #obs : lembrando que essa questão  ela foi tirada de um site url ( como o beecrowd , o coddy , o mimo ) então temos que fazer cruamente o que a questão 
#solicita sem mais nem menos , mas ao transferir esse  código para o vs code, para ele funcionar, faça as devidas alterações necessárias
   


"""Create a function named encode_picnic_story that receives story, commands, and base as its parameters.

This function aims to encode a given story using a sequence of text manipulation commands and convert it into a specified numeric base, creating a playful and cryptic representation of the story.

The encoding process involves the following steps:

Apply the provided commands to manipulate the story string. The available commands are:
"reverse": Reverses the order of characters in the story.
"uppercase": Converts all characters in the story to uppercase.
"sort": Sorts the characters in the story in ascending order.
Convert each character in the manipulated story to its corresponding ASCII code.
Convert each ASCII code to the specified numeric base.
Concatenate the converted values to form the final encoded story.
The function should handle the following numeric bases:

Binary (base 2)
Octal (base 8)
Decimal (base 10)
Hexadecimal (base 16)
Parameters:

story (str): The original story text to be encoded.
commands (list): A list of string commands to manipulate the story before encoding. Valid commands are "reverse", "uppercase", and "sort".
base (str): The numeric base to convert the encoded story to. Valid bases are "binary", "octal", "decimal", and "hexadecimal".
The function returns the encoded story as a string, where each character is represented by its converted value in the specified base, concatenated together"""
#segunda versão : dada pelo coddy : 
def encode_picnic_story(story, commands, base):
    for command in commands:
        if command == "reverse":
            story = story[::-1]
        elif command == "uppercase":
            story = story.upper()
        elif command == "sort":
            story = ''.join(sorted(story))
    
    ascii_codes = [ord(char) for char in story]
    
    if base == "binary":
        encoded_story = ''.join(bin(code)[2:].zfill(8) for code in ascii_codes)
    elif base == "octal":
        encoded_story = ''.join(oct(code)[2:] for code in ascii_codes)
    elif base == "decimal":
        encoded_story = ''.join(str(code) for code in ascii_codes)
    elif base == "hexadecimal":
        encoded_story = ''.join(hex(code)[2:].upper() for code in ascii_codes)
    
    return encoded_story
