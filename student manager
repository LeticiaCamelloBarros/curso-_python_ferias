#Project Overview:
#The Student Records Manager manages student data using dictionaries and sets. 
#Each student record includes their name, age, grades, and courses.
#Key operations include adding students, updating grades, checking course enrollment, calculating average grades, listing students by course, and filtering top students based on grade thresholds.
#This project demonstrates the practical use of dictionaries for structured data, sets to handle duplicates, and advanced decision-making for efficient data management.
#It’s a practical way to apply Python concepts in a real-world scenario.

#veja o jeito de fazer cada parte da questão por meio do comentário desse commit . 
student_records = {}

def add_student(name, age, courses):
    if name in student_records:
        print(f"Student '{name}' already exists.")
        return
    student_records[name] = {"age": age, "grades": set(), "courses": set(courses)}
    print(f"Student '{name}' added successfully.")

add_student("Alice", 20, ["Math", "Physics"])
add_student("Bob", 22, ["Biology", "Chemistry"])
print(student_records)
